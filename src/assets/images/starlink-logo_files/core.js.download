var introAnimation;
var constellationAnimation;
var moveOffset;
var introAnimation;
var buildingAnimations;
var isScrolling = false;
var currentSection = "feature";
var windowWidth = 0;
var spacexScale = 1;

function initSpaceX(){
    gsap.defaults({ overwrite: "auto" });
    gsap.config({ nullTargetWarn: false });
    gsap.registerPlugin(ScrollTrigger);

    moveOffset = $(document).height();
    var win = $(window);

    $.fn.viewportOffset = function() {
        var offset = $(this).offset();

        return {
            left: offset.left - win.scrollLeft(),
            top: offset.top - win.scrollTop()
        };
    };

	initStarlink();
	if (deviceSettings.isMobile) {
		$('video').remove();
	} else {
		initStarlinkDesktop();
	}

	win.on("resize", siteResize);
	win.triggerHandler("resize");
	win.on('beforeunload', function() {
		win.scrollTop(0);
	});

    initInteractions();
    initSwiper();
}

function initStarlink() {
	introAnimation =  new TimelineMax({ paused: true, force3D: true, onComplete: function () {} });

	introAnimation.fromTo( "starlink-logo", 2, { autoAlpha: 0 }, { autoAlpha: 1, ease: Linear.easeNone }, 0 );
	introAnimation.staggerFromTo( ".letter", 2, { autoAlpha: 0 }, { autoAlpha: 1, ease: Linear.easeNone}, 0.1, 1 );

	introAnimation.staggerFromTo( ".logo_x", 3, { autoAlpha: 0 }, { autoAlpha: 1, ease: Linear.easeNone}, 0.25, 0 );
	introAnimation.fromTo( "#mask_x1 circle", 3, { attr:{ cx: 75, cy: 300, r: 200 } }, { attr:{ cx: 275, cy: 85, r: 200 }, ease: Expo.easeInOut }, 0 );
	introAnimation.fromTo( "#mask_x2 circle", 3, { attr:{ cx: 340, cy: 185, r: 80 } }, { attr:{ cx: 230, cy: 90, r: 80 }, ease: Expo.easeInOut }, 0 );

	introAnimation.fromTo( "#feature .background", 2, { autoAlpha: 0 }, { autoAlpha: 1, ease: Linear.easeNone }, 0.1, 0 );

	TweenMax.fromTo( "#scrollme", 1, { autoAlpha: 0 }, { autoAlpha: 1, yoyo: true, repeat: -1, ease: Linear.easeNone } );

	introAnimation.staggerFromTo( ".animate-intro", 3, { y: 50, autoAlpha: 0 }, { y: 0, autoAlpha: 1, ease: Expo.easeOut }, 0.1, 0.25	 );
	introAnimation.play();

	// GENERIC ANIMATION STUFF
	$(window).scroll(function () {

		// ANIMATE UP & DOWN
		$(".animate").each( function() {
			var elementOffset = $(this).viewportOffset().top;
			var elementNegativeOffset = -($(this).height() + 20);

			if ( elementOffset < elementNegativeOffset ) {
				TweenMax.set($(this), { y: -100, autoAlpha: 0 });
			} else if ( elementOffset > $(window).height() ){
				TweenMax.set($(this), { y: 100, autoAlpha: 0 });
			} else {
				TweenMax.to( $(this), 2, { y: 0, autoAlpha: 1, ease: Expo.easeOut });
			}
		})

		// ANIMATE LEFT
		$(".animate-left").each( function() {
			var elementOffset = $(this).viewportOffset().top;
			var elementNegativeOffset = -($(this).height() + 20);
			if ( elementOffset < elementNegativeOffset ) {
				TweenMax.set($(this), { x: 100, y: -100, autoAlpha: 0 });
			} else if ( elementOffset > $(window).height() ){
				TweenMax.set($(this), { x: 100, y: 100, autoAlpha: 0 });
			} else {
				TweenMax.set($(this), { y: 0 });
				TweenMax.to( $(this), 3, { x: 0, autoAlpha: 1, ease: Expo.easeOut });
			}
		})

        // ANIMATE RIGHT
		$(".animate-right").each( function() {
			var elementOffset = $(this).viewportOffset().top;
			var elementNegativeOffset = -($(this).height() + 20);
			if ( elementOffset < elementNegativeOffset ) {
				TweenMax.set($(this), { x: -100, y: -100, autoAlpha: 0 });
			} else if ( elementOffset > $(window).height() ){
				TweenMax.set($(this), { x: -100, y: 100, autoAlpha: 0 });
			} else {
				TweenMax.set($(this), { y: 0 });
				TweenMax.to( $(this), 3, { x: 0, autoAlpha: 1, ease: Expo.easeOut });
			}
		});
	});
}

// DESKTOP STUFF
function initStarlinkDesktop() {

	if (deviceSettings.isMobile) {
		// NOTHING
	} else {
		TweenMax.set( ".hover", { yPercent: 100, display: 'block' } );
		TweenMax.set( ".text", { z: 1 } );

		$('.btn').hover(function(e) {
			TweenMax.to( $(this).find(".text"), 0.5, { color: "#000000", ease: Expo.easeOut });
			TweenMax.to( $(this).find(".hover"), 0.5, { yPercent: 0, autoAlpha: 1, ease: Expo.easeOut });
		}, function(e) {
			TweenMax.to( $(this).find(".text"), 0.5, { color: "#FFFFFF", ease: Expo.easeOut });
			TweenMax.to( $(this).find(".hover"), 0.5, { yPercent: 100, autoAlpha: 0, ease: Expo.easeOut });
		});
	}
}

// SITE RESIZE
function siteResize() {
	var w = document.documentElement.clientWidth;
	var h = window.innerHeight;

	// SCALE FOR HEADER AREA IMAGERY
	var ratioWidth = 1920;
	var ratioHeight = 1080;

	if (h < ratioHeight) {
		spacexScale = Math.round(h/ratioHeight * 100) / 100;
	} else {
		spacexScale = 1;
	}

	// MIN-HEIGHT FOR SECTIONS
	h = Math.max(h, 720);

	TweenMax.set( ".resize", { height: h, width: w });
	TweenMax.set( ".resize_gallery", { height: h - 100 });

	$(window).scroll();
}

function initInteractions() {
	if (deviceSettings.isMobile) {
		// MOBILE ANIMATIONS IF NEEDED
	} else {
		// DESKTOP ANIMATIONS IF NEEDED
	}

	// HEADER ANIMATION
	var introAnimation =  new TimelineMax({ paused: true });
	introAnimation.fromTo( "#feature .background", 2, { autoAlpha: 0 }, { autoAlpha: 1, ease: "none", stagger: 0.25 }, 0 );
	introAnimation.fromTo( "#feature .reveal-intro", 2, { y: 50, autoAlpha: 0 }, { y: 0, autoAlpha: 1, ease: "expo.out", stagger: 0.25 }, 0.5 );
	introAnimation.play(0);

	// HEADER BACKGROUND ON SCROLL
	gsap.fromTo("#feature .background", 2,
		{ y: 0 },
		{
			y: 250,
			ease: "none",
			scrollTrigger: {
				trigger:  "#feature",
				start: "top top",
				scrub: true
			}
		}
	);

	// COOL ARROW AREA
	gsap.fromTo(".reveal-step", 2,
		{ x: -30, autoAlpha: 0 },
		{
			x: 0,
			autoAlpha: 1,
			stagger: 0.25,
			ease: "expo",
			scrollTrigger: {
				trigger:  ".setup-steps",
				toggleActions: "restart pause restart none",
				start: "top bottom"
			}
		}
	);

	// GENERIC REVEAL ANIMATIONS
	gsap.utils.toArray(".reveal").forEach(function(elem) {
		hideReveal(elem);

		ScrollTrigger.create({
			trigger: elem,
			onEnter: function() { showReveal(elem) },
			onEnterBack: function() { showReveal(elem, -1) },
			onLeave: function() { hideReveal(elem) }
		});
	});
}

function initSwiper() {
    new Swiper ('#featured', {
        direction: 'horizontal',
        loop: true,
        speed: 500,
        pagination: {
            el: '.swiper-pagination',
            clickable: true,
        },
        navigation: {
            nextEl: '#featured-next',
            prevEl: '#featured-prev',
        },
    });
}


